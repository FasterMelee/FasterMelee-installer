#!/bin/sh

set -e

# Source: https://gist.github.com/jj1bdx/5746298
# Linux and similar...
CPUS=$(getconf _NPROCESSORS_ONLN 2>/dev/null)
# FreeBSD and similar...
[ -z "$CPUS" ] && CPUS=$(getconf NPROCESSORS_ONLN)
# Solaris and similar...
[ -z "$CPUS" ] && CPUS=$(ksh93 -c 'getconf NPROCESSORS_ONLN')
# Give up...
[ -z "$CPUS" ] && CPUS=1

echo "tail -f $LOG to follow along with the log for troubleshooting!"
# all of the 2> /dev/nulls redirect useless errors (e.g. entering a newline) to devnull

# define custom config links here!
FMVERSION="" # name of FM version, used in folder name
COMMITHASH="" # full commit hash 
GITCLONELINK="" # Version of Ishiiruka
CONFIGLINK="" # Packed configs, can be found under config/ or config/legacy/


echo ""
echo "Attempting to delete incomplete installations of FM..."
for f in FasterMelee*; do
	if [ -d "${f}" ] && [ ! -d "$f/bin" ]; then
		echo "Found incomplete installation at $f/, deleting."
		rm -rf "$f" # is incomplete if bin/ doesn't exist
	fi
done

echo "" # easiest way to print newline while preserving compatibility :P
echo "Would you like to overwrite ALL of your previous installations? (y/N)"
read -r RESP
if [ "$RESP" = "y" ] || [ "$RESP" = "Y" ]; then
	echo "Are you sure? This action is not reversible! (y/N)"
	read -r RESP
	if [ "$RESP" = "y" ] || [ "$RESP" = "Y" ] ; then
		rm -rf FasterMelee*/
		echo "Deleted all FM folders!"
	fi
else
	echo "No changes made!"
fi

if [ -z "$FMVERSION" ] || [ -z "$COMMITHASH" ] || [ -z "$GITCLONELINK" ] || [ -z "$CONFIGLINK" ]; then #ORs used to ensure everything filled out
	echo ""
	echo "Which version of Faster Melee would you like to install? (default: 1)"
	echo "1.) 5.7 (Discord default)"
	echo "2.) 5.0.3 (SmashLadder default)"
	read -r RESP
	if [ "$RESP" -eq 2 ] 2> /dev/null; then
	 	FMVERSION="5.0.3"
		COMMITHASH="d462ca38724db65d7f92f3edbd16b6657291e420"
		GITCLONELINK="https://github.com/Tinob/Ishiiruka"
	else
		FMVERSION="5.7"
		COMMITHASH="ce994a2cea882bf4d145df87554e43314331cf9a"
		GITCLONELINK="https://github.com/HannesMann/Ishiiruka"
	fi
	echo "Installing version $FMVERSION!"
	CONFIGLINK="https://github.com/Ptomerty/FasterMelee-installer/raw/master/config/$FMVERSION-fmconfig.tar.gz"
else
	echo ""
	echo "Attempting to install version $FMVERSION!"
fi

FOLDERNAME="FasterMelee-${FMVERSION}"
if [ -d "$FOLDERNAME" ]; then
	echo ""
	echo "FM Folder with same version found! Would you like to overwrite? (y/N)"
	read -r RESP
	if [ "$RESP" = "y" ] || [ "$RESP" = "Y" ]; then
		echo "Are you sure? This action is not reversible! (y/N)"
		read -r RESP
		if [ "$RESP" = "y" ] || [ "$RESP" = "Y" ] ; then
			rm -r "$FOLDERNAME"
			echo "Deleted!"
		else
			echo "Quitting!"
			exit
		fi
	else
		echo "Quitting!"
		exit
	fi
fi
LOG="$(pwd)/$FOLDERNAME/log.txt"

echo ""
echo "Would you like to install rules for your Wii U adapter? (y/N)"
read -r RESP
if [ "$RESP" = "y" ] || [ "$RESP" = "Y" ]; then
	sudo rm -f /etc/udev/rules.d/51-gcadapter.rules # remove even if doesn't exist
	echo 'SUBSYSTEM=="usb", ENV{DEVTYPE}=="usb_device", ATTRS{idVendor}=="057e", ATTRS{idProduct}=="0337", MODE="0666"' | sudo tee /etc/udev/rules.d/51-gcadapter.rules > /dev/null # pipe to write-protected file, remove STDOUT
	sudo udevadm control --reload-rules
	echo "Rules added!"
else
	echo "No changes made!"
fi

echo ""
echo "CPU Threads detected: $CPUS"
echo "How many threads would you like to use to compile? (passed to make as -j flag, default: 1, max: $((CPUS + 1)))"
read -r RESP
if [ "$RESP" -ge 1 ] 2> /dev/null && [ "$RESP" -le $((CPUS + 1)) ] 2> /dev/null; then
	CPUS=$RESP 
else
	CPUS=1
fi
echo "Using $CPUS thread(s)!"

echo ""
mkdir "$FOLDERNAME" && cd "$FOLDERNAME"
echo "Downloading config files..."
wget $CONFIGLINK
echo "Extracting..."
tar -xzf "$FMVERSION-fmconfig.tar.gz" && rm "$FMVERSION-fmconfig.tar.gz"	
echo "Downloading tarball..."
wget "$GITCLONELINK/archive/$COMMITHASH.tar.gz"
echo "Extracting..."
tar -xzf "$COMMITHASH.tar.gz" && rm "$COMMITHASH.tar.gz"
mv "Ishiiruka-$COMMITHASH" Ishiiruka
cd Ishiiruka
echo "Patching tarball..."
sed -i "s#\${GIT_EXECUTABLE} rev-parse HEAD#echo $COMMITHASH#g" CMakeLists.txt  # --set scm_rev_str everywhere to actual commit hash when downloaded
sed -i "s#\${GIT_EXECUTABLE} describe --always --long --dirty#echo $(echo "$COMMITHASH" | cut -c1-9 )#g" CMakeLists.txt #ensures compatibility w/ netplay
sed -i "s#\${GIT_EXECUTABLE} rev-parse --abbrev-ref HEAD#echo HEAD#g" CMakeLists.txt
echo "Adding FM config files..."
mkdir build && cd build
mv ../../Binaries .
echo "cmaking..."
cmake .. -DLINUX_LOCAL_DEV=true >>"$LOG" 2>&1
echo "Compiling..."
make -j $CPUS 2>>"$LOG" # gets rid of errors as to not cause confusion

echo "Cleaning up..."
rm "$LOG"
cd ../..
mv Ishiiruka/build/Binaries/ bin/
rm -rf Ishiiruka # -f required to remove git history
rm -f ../launch-faster-melee # -f required if shortcuts do not exist
rm -f ../launch-fm
<<<<<<< HEAD
=======

echo "Creating shortcuts..."
if [ "$SHORTCUTBOOL" -eq 1 ]; then
	rm -f ~/.local/share/applications/faster-melee-$FMVERSION.desktop # remove old shortcut
	EXEPATH="$(pwd)/bin"
	FMNAME="Faster Melee $FMVERSION"
	echo "[Desktop Entry]
Type=Application
GenericName=Wii/GameCube Emulator
Comment=Ishiiruka fork for SSBM
Categories=Emulator;Game;
Icon=$EXEPATH/Dolphin.png
Version=$FMVERSION
Name=$FMNAME
Exec=$EXEPATH/dolphin-emu" | tee ~/.local/share/applications/faster-melee-$FMVERSION.desktop > /dev/null
fi
>>>>>>> af5c1f1218368869d8d530ce98dbd2ebed011efe
ln -s "$FOLDERNAME/bin/dolphin-emu" ../launch-fm
echo 'Done! Run ./launch-fm to run the latest installed version!'
echo 'Make sure to unplug and replug your adapter before opening Dolphin if rules were installed!'
